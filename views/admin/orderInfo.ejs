<%- include("../partials/admin/header.ejs") %>

<main class="main mb-5">
    <div class="page-header text-center" style="background-image: url('/adminAssets/images/page-header-bg.jpg')">
        <div class="container">
            <h1 class="page-title my-3">Order Details</h1>
        </div>
    </div>

    <div class="page-content">
        <div class="container">
            <div class="card">
                <div class="card-body">
                    <div class="row">
                        <!-- Left Column: Products -->
                        <div class="col-lg-8">
                            <h5 class="card-title">Order ID: <%= orderData.orderId %></h5>

                            <!-- Ordered Items -->
                            <h6>Items:</h6>
                            <ul>
                                <% orderData.orderedItems.forEach(item => { %>
                                    <li class="mb-3">
                                        <div class="d-flex align-items-center">
                                            <img src="/productImages/<%= item.productId.productImage[0] %>" alt="Product Image" class="img-thumbnail" style="width: auto; height: 100px; object-fit: cover;">
                                            <div class="ml-3">
                                                <p>
                                                    <strong>Product:</strong> <%= item.productId.productName %><br>
                                                    <strong>Quantity:</strong> <%= item.quantity %><br>
                                                    <strong>Price:</strong> ₹<%= item.price.toFixed(2) %><br>
                                                    <strong>Status:</strong>
                                                    <select class="form-select shadow-sm form-control rounded-0"
                                                        onchange="handleProductStatusChange(this.value, '<%= orderData._id %>', '<%= item._id %>')">
                                                        <option value="Pending" <%= item.status === 'Pending' ? 'selected' : (item.status !== 'Pending' ? 'disabled' : '') %>>Pending</option>
                                                        <option value="Shipped" <%= item.status === 'Shipped' ? 'selected' : (item.status === 'Pending' ? '' : 'disabled') %>>Shipped</option>
                                                        <option value="Cancelled" <%= item.status === 'Cancelled' ? 'selected' : (['Pending', 'Shipped'].includes(item.status) ? '' : 'disabled') %>>Cancelled</option>
                                                        <option value="Delivered" <%= item.status === 'Delivered' ? 'selected' : (['Pending', 'Shipped'].includes(item.status) ? '' : 'disabled') %>>Delivered</option>
                                                        <option value="Return Requesting" 
                                                            <%= (item.status === 'Cancelled' || item.status === 'Pending') ? 'disabled' : (item.status === 'Return Requesting' ? 'selected' : '') %>>
                                                            Return Requesting
                                                        </option>
                                                        <option value="Returned" 
                                                            <%= (item.status === 'Cancelled' || item.status === 'Pending') ? 'disabled' : (item.status === 'Returned' ? 'selected' : '') %>>
                                                            Returned
                                                        </option>
                                                    </select>

                                                </p>
                                            </div>
                                        </div>
                                    </li>
                                <% }) %>
                            </ul>
                        </div>

                        <!-- Right Column: Customer and Order Info -->
                        <div class="col-lg-4">
                            <!-- Customer Details -->
                            <h6>Customer Details:</h6>
                            <p>
                                <strong>Name:</strong> <%= orderData.address[0].name %><br>
                                <strong>Address:</strong> <%= orderData.address[0].city %>, <%= orderData.address[0].state %> - <%= orderData.address[0].pincode %><br>
                                <strong>Phone:</strong> <%= orderData.address[0].phone %><br>
                                <strong>Email:</strong> <%= orderData.address[0].email ? orderData.address[0].email : "N/A" %>
                            </p>

                            <!-- Total Price -->
                            <p><strong>Total Price:</strong> ₹<%= orderData.totalPrice.toFixed(2) %></p>

                            <p><strong>Payment Method:</strong> <%= orderData.paymentMethod %></p>

                            <!-- Update Overall Order Status Dropdown -->
                            <div class="mt-3">
                                <label for="orderStatus" class="form-label">Update Order Status:</label>
                                <select class="form-select shadow-sm form-control rounded-0"
                                    onchange="handleOrderStatusChange(this.value, '<%= orderData._id %>')">
                                    <option value="Pending" <%= orderData.status === 'Pending' ? 'selected' : (orderData.status !== 'Pending' ? 'disabled' : '') %>>Pending</option>
                                    <option value="Shipped" <%= orderData.status === 'Shipped' ? 'selected' : (orderData.status === 'Pending' ? '' : 'disabled') %>>Shipped</option>
                                    <option value="Cancelled" <%= orderData.status === 'Cancelled' ? 'selected' : (['Pending', 'Shipped'].includes(orderData.status) ? '' : 'disabled') %>>Cancelled</option>
                                    <option value="Delivered" <%= orderData.status === 'Delivered' ? 'selected' : (['Pending', 'Shipped'].includes(orderData.status) ? '' : 'disabled') %>>Delivered</option>
                                    <option value="Returned" 
                                        <%= (orderData.orderedItems.some(item => item.status === 'Returned')) ? (orderData.status === 'Returned' ? 'selected' : '') : 'disabled' %>>
                                        Returned
                                    </option>
                                </select>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</main>

<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    // Handle Order Status Change
    function handleOrderStatusChange(newStatus, orderId) {
        Swal.fire({
            title: 'Are you sure?',
            text: 'You want to change the overall order status?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, change it!'
        }).then((result) => {
            if (result.isConfirmed) {
                axios.post('/admin/updateOrderStatus', { orderId, newStatus })
                    .then(response => {
                        if (response.status === 200) {
                            Swal.fire('Success', response.data.message, 'success')
                                .then(() => window.location.reload());
                        } else {
                            Swal.fire('Error', 'Unexpected response status', 'error');
                        }
                    })
                    .catch(error => {
                        Swal.fire('Error', 'Failed to update order status', 'error');
                        console.error('Error updating order status:', error);
                    });
            }
        });
    }

    // Handle Individual Product Status Change
    function handleProductStatusChange(newStatus, orderId, productId) {
    Swal.fire({
        title: 'Are you sure?',
        text: 'You want to change the status of this product?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, change it!',
    }).then((result) => {
        if (result.isConfirmed) {
            console.log("orderId:", orderId, "productId:", productId, "newStatus:", newStatus);

            axios
                .post('/admin/updateProductStatus', { orderId, productId, newStatus })
                .then((response) => {
                    if (response.status === 200) {
                        Swal.fire('Success', response.data.message, 'success').then(() =>
                            window.location.reload()
                        );
                    } else {
                        Swal.fire('Error', 'Unexpected response status', 'error');
                    }
                })
                .catch((error) => {
                    Swal.fire('Error', 'Failed to update product status', 'error');
                    console.error('Error updating product status:', error);
                });
        }
    });
}

</script>
